///$tab Main
SET ThousandSep=',';
SET DecimalSep='.';
SET MoneyThousandSep=',';
SET MoneyDecimalSep='.';
SET MoneyFormat='$ ###0.00;-$ ###0.00';
SET TimeFormat='h:mm:ss TT';
SET DateFormat='M/D/YYYY';
SET TimestampFormat='M/D/YYYY h:mm:ss[.fff] TT';
SET FirstWeekDay=6;
SET BrokenWeeks=1;
SET ReferenceDay=0;
SET FirstMonthOfYear=1;
SET CollationLocale='en-US';
SET CreateSearchIndexOnReload=1;
SET MonthNames='Jan;Feb;Mar;Apr;May;Jun;Jul;Aug;Sep;Oct;Nov;Dec';
SET LongMonthNames='January;February;March;April;May;June;July;August;September;October;November;December';
SET DayNames='Mon;Tue;Wed;Thu;Fri;Sat;Sun';
SET LongDayNames='Monday;Tuesday;Wednesday;Thursday;Friday;Saturday;Sunday';
SET NumericalAbbreviation='3:k;6:M;9:G;12:T;15:P;18:E;21:Z;24:Y;-3:m;-6:Î¼;-9:n;-12:p;-15:f;-18:a;-21:z;-24:y';

///$tab Auto-generated section
///$autogenerated
Set dataManagerTables = '','FACT_REVENUE','FACT_EVENTS';
//This block renames script tables from non generated section which conflict with the names of managed tables

For each name in $(dataManagerTables) 
    Let index = 0;
    Let currentName = name; 
    Let tableNumber = TableNumber(name); 
    Let matches = 0; 
    Do while not IsNull(tableNumber) or (index > 0 and matches > 0)
        index = index + 1; 
        currentName = name & '-' & index; 
        tableNumber = TableNumber(currentName) 
        matches = Match('$(currentName)', $(dataManagerTables));
    Loop 
    If index > 0 then 
            Rename Table '$(name)' to '$(currentName)'; 
    EndIf; 
Next; 
Set dataManagerTables = ;


Unqualify *;

__countryGeoBase:
LOAD
	ISO3Code AS [__ISO3Code],
	ISO2Code AS [__ISO2Code],
	Polygon AS [__Polygon]
FROM [lib://Dev_Space:DataFiles/countryGeo.qvd]
(qvd);

__countryCodeIsoTwo2Polygon:
MAPPING LOAD
	__ISO2Code,
	__Polygon
RESIDENT __countryGeoBase;

LIB CONNECT TO [Dev_Space:Snowflake_Sales_Perfomance];

[FACT_REVENUE]:
LOAD
	Date([EVENT_START_DATE] ) AS [EVENT_START_DATE],
	Date([EVENT_END_DATE] ) AS [EVENT_END_DATE],
	[SALES_PERSON_ID],
	[REDUCTION_EMAIL] AS [FACT_REVENUE.REDUCTION_EMAIL],
	Date([EVENT_BOOKING_DATE] ) AS [EVENT_BOOKING_DATE],
	[VENUE_ID],
	[DEPARTMENT_CODE],
	[ORDER_TYPE],
	[VENUE_TYPE_ID],
	[EVENT_ID],
	[EVENT_TYPE_ID],
	[MARKET_SEGMENT],
	[SALES_CHANNEL_TYPE_ID],
	[TENANT_ID],
	[REVENUE_AMOUNT],
	APPLYMAP( '__countryCodeIsoTwo2Polygon', UPPER([ORDER_TYPE]), '-') AS [FACT_REVENUE.ORDER_TYPE_GeoInfo];

SELECT
    "EVENT_START_DATE",
    "EVENT_END_DATE",
    "SALES_PERSON_ID",
    "REDUCTION_EMAIL",
    "EVENT_BOOKING_DATE",
    "VENUE_ID",
    "DEPARTMENT_CODE",
    "ORDER_TYPE",
    "VENUE_TYPE_ID",
    "EVENT_ID",
    "EVENT_TYPE_ID",
    "MARKET_SEGMENT",
    "SALES_CHANNEL_TYPE_ID",
    "TENANT_ID",
    "REVENUE_AMOUNT"
FROM "MARTS"."SALES_PERFORMANCE"."FACT_REVENUE";

[FACT_EVENTS]:
LOAD
	[REDUCTION_EMAIL] AS [FACT_EVENTS.REDUCTION_EMAIL],
	[EV200_ORG_CODE],
	[EV200_EVT_ID],
	[EV200_EVT_DESC],
	Date([EV200_START_DATE] ) AS [EV200_START_DATE],
	Date([EV200_END_DATE] ) AS [EV200_END_DATE],
	Date([EV200_BKG_BOOK_DATE] ) AS [EV200_BKG_BOOK_DATE],
	[EV200_EST_REVENUE],
	[EV200_PLN_REVENUE],
	[EV200_ACT_REVENUE],
	[EV200_EST_ATTEND],
	[EV200_PLN_ATTEND],
	[EV200_ACT_ATTEND],
	[EV200_EST_COST],
	[EV200_PLN_COST],
	[EV200_ACT_COST],
	[EV200_MASTER_EVT],
	[EV200_PREV_EVT],
	Timestamp([EV200_EVT_IN_DATE] ) AS [EV200_EVT_IN_DATE],
	[EV200_EVT_IN_TIME],
	Timestamp([EV200_EVT_START_DATE] ) AS [EV200_EVT_START_DATE],
	[EV200_EVT_START_TIME],
	Timestamp([EV200_EVT_END_DATE] ) AS [EV200_EVT_END_DATE],
	[EV200_EVT_END_TIME],
	[EV200_SLSPER],
	[EV200_CUST_NBR],
	[EV200_EVT_INDICATOR],
	[TENANT_ID],
	[EV205_EVT_CATEGORY],
	[EV210_EVT_CLASS],
	[EV215_EVT_TYPE],
	[EV205_EVT_CAT_DESC],
	[EV205_SCOPE],
	[EV205_RETIRE],
	[EV205_SEQUENCE],
	[EV210_EVT_CLS_DESC],
	[EV210_SCOPE],
	[EV210_RETIRE],
	[EV210_SEQUENCE],
	[EV215_EVT_TYP_DESC],
	[CCFIL_ORG_NAME];

SELECT
    "REDUCTION_EMAIL",
    "EV200_ORG_CODE",
    "EV200_EVT_ID",
    "EV200_EVT_DESC",
    "EV200_START_DATE",
    "EV200_END_DATE",
    "EV200_BKG_BOOK_DATE",
    "EV200_EST_REVENUE",
    "EV200_PLN_REVENUE",
    "EV200_ACT_REVENUE",
    "EV200_EST_ATTEND",
    "EV200_PLN_ATTEND",
    "EV200_ACT_ATTEND",
    "EV200_EST_COST",
    "EV200_PLN_COST",
    "EV200_ACT_COST",
    "EV200_MASTER_EVT",
    "EV200_PREV_EVT",
    "EV200_EVT_IN_DATE",
    "EV200_EVT_IN_TIME",
    "EV200_EVT_START_DATE",
    "EV200_EVT_START_TIME",
    "EV200_EVT_END_DATE",
    "EV200_EVT_END_TIME",
    "EV200_SLSPER",
    "EV200_CUST_NBR",
    "EV200_EVT_INDICATOR",
    "TENANT_ID",
    "EV205_EVT_CATEGORY",
    "EV210_EVT_CLASS",
    "EV215_EVT_TYPE",
    "EV205_EVT_CAT_DESC",
    "EV205_SCOPE",
    "EV205_RETIRE",
    "EV205_SEQUENCE",
    "EV210_EVT_CLS_DESC",
    "EV210_SCOPE",
    "EV210_RETIRE",
    "EV210_SEQUENCE",
    "EV215_EVT_TYP_DESC",
    "CCFIL_ORG_NAME"
FROM "MARTS"."SALES_PERFORMANCE"."FACT_EVENTS";



TAG FIELD [ORDER_TYPE] WITH '$geoname', '$relates_FACT_REVENUE.ORDER_TYPE_GeoInfo';
TAG FIELD [FACT_REVENUE.ORDER_TYPE_GeoInfo] WITH '$geopolygon', '$hidden', '$relates_ORDER_TYPE';

DROP TABLES __countryGeoBase;
[autoCalendar]: 
  DECLARE FIELD DEFINITION Tagged ('$date')
FIELDS
  Dual(Year($1), YearStart($1)) AS [Year] Tagged ('$axis', '$year'),
  Dual('Q'&Num(Ceil(Num(Month($1))/3)),Num(Ceil(NUM(Month($1))/3),00)) AS [Quarter] Tagged ('$quarter', '$cyclic'),
  Dual(Year($1)&'-Q'&Num(Ceil(Num(Month($1))/3)),QuarterStart($1)) AS [YearQuarter] Tagged ('$yearquarter', '$qualified'),
  Dual('Q'&Num(Ceil(Num(Month($1))/3)),QuarterStart($1)) AS [_YearQuarter] Tagged ('$yearquarter', '$hidden', '$simplified'),
  Month($1) AS [Month] Tagged ('$month', '$cyclic'),
  Dual(Year($1)&'-'&Month($1), monthstart($1)) AS [YearMonth] Tagged ('$axis', '$yearmonth', '$qualified'),
  Dual(Month($1), monthstart($1)) AS [_YearMonth] Tagged ('$axis', '$yearmonth', '$simplified', '$hidden'),
  Dual('W'&Num(Week($1),00), Num(Week($1),00)) AS [Week] Tagged ('$weeknumber', '$cyclic'),
  Date(Floor($1)) AS [Date] Tagged ('$axis', '$date', '$qualified'),
  Date(Floor($1), 'D') AS [_Date] Tagged ('$axis', '$date', '$hidden', '$simplified'),
  If (DayNumberOfYear($1) <= DayNumberOfYear(Today()), 1, 0) AS [InYTD] ,
  Year(Today())-Year($1) AS [YearsAgo] ,
  If (DayNumberOfQuarter($1) <= DayNumberOfQuarter(Today()),1,0) AS [InQTD] ,
  4*Year(Today())+Ceil(Month(Today())/3)-4*Year($1)-Ceil(Month($1)/3) AS [QuartersAgo] ,
  Ceil(Month(Today())/3)-Ceil(Month($1)/3) AS [QuarterRelNo] ,
  If(Day($1)<=Day(Today()),1,0) AS [InMTD] ,
  12*Year(Today())+Month(Today())-12*Year($1)-Month($1) AS [MonthsAgo] ,
  Month(Today())-Month($1) AS [MonthRelNo] ,
  If(WeekDay($1)<=WeekDay(Today()),1,0) AS [InWTD] ,
  (WeekStart(Today())-WeekStart($1))/7 AS [WeeksAgo] ,
  Week(Today())-Week($1) AS [WeekRelNo] ;

DERIVE FIELDS FROM FIELDS [EVENT_START_DATE], [EVENT_END_DATE], [EVENT_BOOKING_DATE], [EV200_START_DATE], [EV200_END_DATE], [EV200_BKG_BOOK_DATE], [EV200_EVT_IN_DATE], [EV200_EVT_START_DATE], [EV200_EVT_END_DATE] USING [autoCalendar] ;